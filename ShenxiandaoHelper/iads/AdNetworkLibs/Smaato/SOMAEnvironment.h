//
//  SOMAEnvironment.h
//  SomaLib
//
//  
//  Copyright Â©2009-10 Smaato, Inc.  All Rights Reserved.  Use of this software is subject to the Smaato Terms of Service. 
//
#pragma once
#import <Foundation/Foundation.h>
#import <CoreLocation/CoreLocation.h>
#import <UIKit/UIKit.h>
#import "DebugData.h"


/* Control of log level */
enum {
	kSOMALogLevelNone = 0,		//default: only major error reporting
	kSOMALogLevelDebug = 1		//Developer mode, detail reporting
};

/* Gender constants */
enum {
	kSOMAMetadataQueryGenderMale = 127,		  
	kSOMAMetadataQueryGenderFemale = 128		
};

/* Error domain and code */
extern NSString * const kSOMAErrorDomain;
#define kSOMAEmptyAnswerError 100
#define kSOMAXMLParsingError  101


/* Notification parameters */
extern NSString * const kSOMABannerUUID;


/* 
 *	The SOMAEnvironment is a singleton object controlling properties (or default value) available for all SOMA Object
 *	inside an iPhone application. It allows to:
 *     - set default values for publisher and AdSpace ID (those value can be overriden on a SOMABanner basis)
 *	   - control the log level : in debug mode more information is provided to a developer
 *	   - enable or not the use of Location Services. If enabled, all queries to the SOMA server will include geo information
 *		 - be a centralized notification point for events related to SOMABanner (query progresses)
 */	 

@interface SOMAEnvironment : NSObject<CLLocationManagerDelegate>{
	short mLogLevel;
	BOOL isUserProfileSettingOn;
	BOOL mUseLocationServices;	
	CLLocationManager *mLocationManager;
	CLLocation* mlastLocation;		
	NSString *mConnection;
	
	long downloadTracking;
	
	NSMutableSet *_mdKeyWords;
	NSMutableSet *_mdSearchTerms;
	
	NSString *sessionID;
	int _mdAge;
	short _mdGender;
	NSString *mSOMAQueryUserAgent;
	NSString *mdZip;
	NSString *mdCity;
	NSString *mdCountry;
	NSString *mdRegion;
	NSString *somaDevice;
	BOOL debugMode;
	DebugData *debugData;
}

/* SOMAEnvironmennt Properties */
@property BOOL 	useLocationServices;						/* Turn On/Off automatic fetching user location inside iSOMA SDK. Not available in Simulator */
@property BOOL  isUserProfileSettingOn;			/* Turn On/Off use of user profile setting. The user can opt-in/opt-out anytime*/
@property BOOL  debugMode;						/* Turn On/Off debugMode Screen on end user's device. Please contact us for details if you want to know more about the debug mode.*/
@property (readonly) NSString *SOMAQueryUserAgent;
@property (readonly) NSString *connection;
@property long downloadTracking;					/* Download Tracking Parameter*/
@property short logLevel;							/* Loglevel (default kSOMALogLevelNone) */
@property (nonatomic,retain) NSString *sessionID;				/*Global Session ID, generated by sessionStart */
@property	(readonly) NSArray *mdKeywords;				/* Query metadata : list of keywords used in every SOMABanner query */
@property	(readonly) NSArray *mdSearchterms;		/* Query metadata : list of searchterms used in every SOMABanner query */
@property	short mdGender;												/* Query metadata : gender of the user */
@property	int mdAge;														/* Query metadata : age of the user */
@property (nonatomic,retain) CLLocation* lastLocation;	        /* Query metadata : gps of the user */
@property (nonatomic,retain) NSString * mdZip;					/* Query metadata : zipcode of the user */			
@property (nonatomic,retain) NSString * mdCity;					/* Query metadata : city of the user */		
@property (nonatomic,retain) NSString * mdCountry;				/* Query metadata : countrycode of the user */
@property (nonatomic,retain) NSString * mdRegion;				/* Query metadata : region of the user */
@property (nonatomic,retain) NSString * somaDevice;
@property (nonatomic,retain) DebugData * debugData;
@property (nonatomic, readonly) bool showAlertPopup;
/* Singleton access */
+ (SOMAEnvironment *) defaultEnvironment; 

- (void) sessionStart;										/* Generate the Session ID */

/* Keywords management */
- (void) addMdKeyword:(NSString *)keyword;				/* Add a keyword to the global keywords list.  */
- (void) removeMdKeyword:(NSString *)keyword;			/* Remove a keyword to the global keywords list */

/* Searchterm management */
- (void) addMdSearchterm:(NSString *)searchterm;			/* Add a searchterm to the global searchterm list.  */
- (void) removeMdSearchterm:(NSString *)searchterm;			/* Remove a searchterm to the global searchterm list */

@end
